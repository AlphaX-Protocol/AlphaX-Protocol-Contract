{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xA61a6E696B7C566DA42B80dA27d96e7104bcec99",
      "txHash": "0xb9f6335572db16d6ab82e99826c10e13a691d375affe9f6e086b7a3a36acfcad",
      "kind": "uups"
    }
  ],
  "impls": {
    "8192cbbe013c21805e1f0250edad0bc245d5147cac566b7bdab95dd6dddf6a2e": {
      "address": "0x552E7A55802f3350C707a243E402aa50Eda9D286",
      "txHash": "0x26a188e3399f42c8af375ad2db421c2e191c79c39aec6e9c2d9d18ca762ff246",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "USDT_ADDRESS",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DEXVault",
            "src": "contracts/DEXVault.sol:48"
          },
          {
            "label": "signers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DEXVault",
            "src": "contracts/DEXVault.sol:49"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(request)4002_storage)",
            "contract": "DEXVault",
            "src": "contracts/DEXVault.sol:52"
          },
          {
            "label": "tokenWithdrawLimit",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVault",
            "src": "contracts/DEXVault.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)193_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)257_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(request)4002_storage)": {
            "label": "mapping(uint256 => struct DEXVault.request)",
            "numberOfBytes": "32"
          },
          "t_struct(request)4002_storage": {
            "label": "struct DEXVault.request",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4ef16e4d1c1c3a552a9ceb5c171e9eaeb5269ad40856250335bbc5f1883aad01": {
      "address": "0x2b62F1c725Adc85479F0A2b383f42bE09b23686F",
      "txHash": "0xa336ab41b80660e30c45bd31606bf0e6eb77585eb0fcbfa236702929bd746484",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "USDT_ADDRESS",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:55"
          },
          {
            "label": "signers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:56"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(request)4024_storage)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:59"
          },
          {
            "label": "tokenWithdrawLimit",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:64"
          },
          {
            "label": "dailyWithdrawLimit",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:67"
          },
          {
            "label": "dailyWithdrawals",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:70"
          },
          {
            "label": "lastWithdrawalTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)193_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)257_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(request)4024_storage)": {
            "label": "mapping(uint256 => struct DEXVaultV1.request)",
            "numberOfBytes": "32"
          },
          "t_struct(request)4024_storage": {
            "label": "struct DEXVaultV1.request",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9bde321ca713fc5ccd34631327bb3b917898d1d371b4db8e4a65080dedda2ee8": {
      "address": "0xc36686dD0C3B68fE8cd738C5C25e4e3Ae0b8bE75",
      "txHash": "0x2ab7a32bd978a5dea2059a861dfb3cb516f2bd997a18a38f5f3058a6c1f0c6bf",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "USDT_ADDRESS",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:55"
          },
          {
            "label": "signers",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:56"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(request)4024_storage)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:59"
          },
          {
            "label": "tokenWithdrawLimit",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:64"
          },
          {
            "label": "dailyWithdrawLimit",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:67"
          },
          {
            "label": "dailyWithdrawals",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:70"
          },
          {
            "label": "lastWithdrawalTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DEXVaultV1",
            "src": "contracts/upgrade/DEXVaultV1.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)193_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)257_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(request)4024_storage)": {
            "label": "mapping(uint256 => struct DEXVaultV1.request)",
            "numberOfBytes": "32"
          },
          "t_struct(request)4024_storage": {
            "label": "struct DEXVaultV1.request",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 20,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
